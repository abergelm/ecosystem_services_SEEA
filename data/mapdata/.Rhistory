imports<- imports %>%
mutate("financial_year" = case_when(date.date >= '2020-04-01'& date.date <= '2021-03-31' ~ 'fy21',
date.date >= '2021-04-01' & date.date <= '2022-03-31' ~ 'fy22',
TRUE ~ 'not'))
View(exports)
View(imports)
question1_table <- merge(exports %>% count(financial_year), imports %>% count(financial_year), by = "financial_year") #get count of exports in fy21 vs fy22. Do same for imports then merge.
colnames(question1_table) <- c('financial_year', 'exports', 'imports') #add column names
question1_table <- mutate(question1_table, ratio = imports/exports) #add column with imp/exp ratio
question1_table <- adorn_totals(question1_table,"row",,,, exports, imports) #add row with totals
view(question1_table)
question1_table <- merge(exports %>% count(financial_year), imports %>% count(financial_year), by = "financial_year") #get count of exports in fy21 vs fy22. Do same for imports then merge.
colnames(question1_table) <- c('financial_year', 'exports', 'imports') #add column names
question1_table <- mutate(question1_table, ratio = imports/exports) #add column with imp/exp ratio
question1_table <- adorn_totals(question1_table,"row",,,, exports, imports) #add row with totals
view(question1_table)
question2_graph <- ggplot(data = question2_table %>% filter(total_trades >= 1114), aes(x = country, y = total_trades, fill = country)) +
geom_col() + geom_text(aes(label = total_trades), nudge_y = 400) +
labs(title="Top 3 Canadian Trade Partners in FY22 ", x = "Country", y = "Total Imports and Exports")
plot(question2_graph)
question2_graph <- ggplot(data = question2_table %>% filter(total_trades >= 1114), aes(x = country, y = total_trades, fill = country)) +
geom_col() + geom_text(aes(label = total_trades), nudge_y = 400) +
labs(title="Top 3 Canadian Trade Partners in FY22 ", x = "Country", y = "Total Imports and Exports")
colnames(exports) <- c('date','country', 'class', 'subclass','financial_year') #simplify column names
largest_export_partner <- exports %>%
filter(financial_year=="fy22") %>% #filter for only fy22
count(country) #count of exports per country
colnames(largest_export_partner) <- c('country', 'total_exports') #rename columns
#find top importing countries
colnames(imports) <- c('date','country', 'level1', 'level2','level3', 'financial_year') #simplify column names
largest_import_partner <- imports %>%
filter(financial_year=="fy22") %>% #filter for only fy22
count(country) #count of exports per country
colnames(largest_export_partner) <- c('country', 'total_exports') #rename columns
#create table of top trading partners (combine imports and exports by country)
question2_table <- merge(largest_export_partner, largest_import_partner, by = "country", all = TRUE, sort = TRUE) #merge two datasets from above
colnames(question2_table) <- c('country', 'exports', 'imports')  #rename columns
question2_table <- mutate(question2_table, total_trades = imports+exports) #add column with sum of imports and exports
question2_table <- arrange(question2_table, desc(total_trades)) #arrange from most to least total trades
view(question2_table)
question2_graph <- ggplot(data = question2_table %>% filter(total_trades >= 1114), aes(x = country, y = total_trades, fill = country)) +
geom_col() + geom_text(aes(label = total_trades), nudge_y = 400) +
labs(title="Top 3 Canadian Trade Partners in FY22 ", x = "Country", y = "Total Imports and Exports")
plot(question2_graph)
export_month <- exports %>%
separate(date, into = c('year', 'month', 'day'),  sep = '-') %>%
group_by(financial_year)
#create graph to compare monthly exports in fy21 vs fy22
question3_graph <- ggplot(export_month) +  geom_bar(mapping = aes(x = month, fill = financial_year)) + facet_wrap(~financial_year) +
labs(title="Comparison of Total Exports in FY21 and FY22", x = "Month", y = "Total Exports")
plot(question3_graph)
export_class <- export_month %>%
count(subclass)
export_class2 <- export_class %>%
pivot_wider(names_from = financial_year, values_from = n) %>%
mutate_all(~replace(., is.na(.), 0)) %>% #replace na values with 0s so average can be calculated
mutate(average = (fy21 + fy22)/2) #add new column with average of fy21/fy22
for (x in 1:10) {
yearname <- paste("fy", x + 22, sep = "")
export_class2 <- export_class2 %>%
mutate(!!yearname := average*1.045^x) #add new column assuming 4.5% increase annually for each subclass from fy21/22 average baseline
}
export_class3 <- export_class2 %>%
mutate_if(is.numeric, round)  %>% #round all numbers
adorn_totals("row") %>%  #add row with totals
filter(subclass == "Total") %>%
pivot_longer(!subclass)
colnames(export_class3) <- c('', 'financial_year', 'total_exports') #add column names
question3_graph2 <- ggplot(data = export_class3 %>% subset(total_exports != 15003)) + geom_line(mapping = aes(x = financial_year, y = total_exports, group = 1))
print(question3_graph2)
view(export_class2)
imports_hs <- unite(imports, col = 'hs_code', c('level1', 'level2', 'level3'), sep = "-")
imports_fy21 <- imports_hs %>%
filter(financial_year == "fy21") %>%
count(hs_code) %>%
filter(n >= 234) #filter only top 10 imports from fy21
#find top imports in fy22 by hscode
imports_fy22 <- imports_hs %>%
filter(financial_year == "fy22") %>%
count(hs_code) %>%
filter(n >= 333) #filter only top 10 imports from fy21
#combine top imports for fy21 and fy22
question4_table <- merge(imports_fy21, imports_fy22, by = "hs_code", all = TRUE)
question4_table <- question4_table %>%
mutate(total_imports = n.x + n.y)
colnames(question4_table) <- c('hs_code', 'fy21', 'fy22', 'total_imports')
view(question4_table)
question4_table <- merge(imports_fy21, imports_fy22, by = "hs_code", all = TRUE)
question4_table <- question4_table %>%
mutate(total_imports = n.x + n.y) %>%
arrange(by_group = total_imports)
colnames(question4_table) <- c('hs_code', 'fy21', 'fy22', 'total_imports')
view(question4_table)
question4_table <- merge(imports_fy21, imports_fy22, by = "hs_code", all = TRUE)
question4_table <- question4_table %>%
mutate(total_imports = n.x + n.y) %>%
arrange(by_group = desc(total_imports))
colnames(question4_table) <- c('hs_code', 'fy21', 'fy22', 'total_imports')
view(question4_table)
rm(list=ls())
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
require(devtools)
install_url("https://gitlab.rrz.uni-hamburg.de/helgejentsch/climdatdownloadr/-/archive/master/climdatdownloadr-master.tar.gz")
install.packages(c("gdalUtils", "httr", "ncdf4", "qpdf", "raster", "RCurl", "RefManageR", "rgdal", "stringr", "sf", "sp", "svMisc", "utils"), dependencies = TRUE)
install.packages(c("gdalUtils", "httr", "ncdf4", "qpdf", "raster", "RCurl", "RefManageR", "rgdal", "stringr", "sf", "sp", "svMisc", "utils"), dependencies = TRUE)
library(ClimDatDownloadR)
require(ClimDatDownloadR)
library(climdatdownloadr)
install_url("https://gitlab.rrz.uni-hamburg.de/helgejentsch/climdatdownloadr/-/archive/master/climdatdownloadr-master.tar.gz")
require(climdatdownloadr)
ls("package:climdatdownloadr")
install.packages("C:/Users/abergelm/Downloads/climdatdownloadr-master.tar.gz", repos = NULL, type = "source")
library(gdalUtils)
devtools:::install_github("gearslaboratory/gdalUtils")
install.packages("C:/Users/abergelm/Downloads/climdatdownloadr-master.tar.gz", repos = NULL, type = "source")
library(ClimDatDownloadR)
library(raster)
library(sp)
library(ClimDatDownloadR)
rm(list=ls())
install.packages("tidyverse")
Version()
library(terra)
rast("C:/Users/abergelm/Desktop/R/ecosystem_services/ecosystem_type.tiff")
r <-  rast(ncols=3, nrows=3)
r[] <- 1:9
View(r)
plot(r)
tiff <- rast("C:/Users/abergelm/Desktop/R/ecosystem_services/ecosystem_type.tiff")
tiff <- rast("C:/Users/abergelm/Desktop/R/ecosystem_services/ecosystem_type.tiff")
r <-  rast(tiff)
r[] <- 1:9
plot(r)
# set working directory
wd <- "~/C:/Users/abergelm/Desktop/R/ecosystem_services/"
setwd(wd)
# set working directory
wd <- "~/C:/Users/abergelm/Desktop/R/ecosystem_services"
tiff <- rast("ecosystem_type.tiff")
# set working directory
wd <- "~/C:/Users/abergelm/Desktop/R/ecosystem_services"
setwd(wd)
library(terra)
# set working directory
setwd("~/C:/Users/abergelm/Desktop/R/ecosystem_services")
Sys.setenv(HOME="C:/Users/abergelm/Desktop/R")
# set working directory
setwd("~/C:/Users/abergelm/Desktop/R/ecosystem_services")
setwd("C:/Users/abergelm/Desktop/R")
setwd("C:/Users/abergelm/Desktop/R/ecosystem_services")
# set working directory
setwd("C:/Users/abergelm/Desktop/R/ecosystem_services")
tiff <- rast("ecosystem_type.tiff")
eco_type <- rast(tiff)
# set working directory
setwd("C:/Users/abergelm/Desktop/R/ecosystem_services")
eco_type <- rast("ecosystem_type.tiff")
plot(eco_type)
setwd("C:/Users/abergelm/Desktop/R/ecosystem_services")
# set working directory
setwd("C:/Users/abergelm/Desktop/R/ecosystem_services")
# import tiff file and rasterize
eco_type <- rast("data/ecosystem_type.tiff")
plot(eco_type)
plot(eco_type,
main="Ecosystem Extent in Canada",
sub ="Distribution of ecosystem types")
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
View(eco_type)
eco_type
# data
eco_type_df <- as.data.frame(capture.output(print(eco_type)))
View(eco_type_df)
library(dplyr)
library(tidyr)
eco_type_df <- tidyr::separate(eco_type_df, 1, into = c('param', 'data'), sep = ' : ')
eco_type_df <- dplyr::filter(eco_type_df, !is.na(data))
View(eco_type_df)
eco_type <- rast("data/ecosystem_type.tiff")
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
eco_type
levels(eco_type)
z = levels(eco_type)[[1]]
levels(eco_type)
levels(eco_type)
z = levels(eco_type)[[2]]
z = levels(eco_type)[[1]]
levels(eco_type)
z$eco_type = z$Value
levels(eco_type)
levels(eco_type)
z = levels(eco_type)[[1]]
z
z$eco_type
z$Value
z$eco_type = z$Value
head(z)
z
# set working directory
setwd("C:/Users/abergelm/Desktop/R/ecosystem_services")
# import tiff file and create raster
eco_type <- rast("data/ecosystem_type.tiff")
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
levels(eco_type)
IUCN_ecosystem_types <- read_excel("data/IUCN_ecosystem_types.xlsx")
library(readxl)
IUCN_ecosystem_types <- read_excel("data/IUCN_ecosystem_types.xlsx")
View(IUCN_ecosystem_types)
z$eco_type = IUCN_ecosystem_types$ecosystem_type
z = levels(eco_type)[[1]]
z
z$eco_type = IUCN_ecosystem_types$ecosystem_type
print(IUCN_ecosystem_types$ecosystem_type(header=False))
print(IUCN_ecosystem_types(header=False))
print(IUCN_ecosystem_types$ecosystem_type)
eco_type <- print(IUCN_ecosystem_types$ecosystem_type)
eco_type
levels(eco_type)
eco_type <- rast("data/ecosystem_type.tiff")
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
# reformat ecosystem names
levels(eco_type)
z = levels(eco_type)[[1]]
z
# set working directory
setwd("C:/Users/abergelm/Desktop/R/ecosystem_services")
eco_type <- rast("data/ecosystem_type.tiff")
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
# reformat ecosystem names
levels(eco_type)
# load packages
library(terra)
library(readxl)
# set working directory
setwd("C:/Users/abergelm/Desktop/R/ecosystem_services")
# import tiff file and create raster
eco_type <- rast("data/ecosystem_type.tiff")
View(eco_type)
eco_type
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
# set working directory
setwd("C:/Users/abergelm/Desktop/R/ecosystem_services")
# import tiff file and create raster
eco_type <- rast("data/ecosystem_type.tiff")
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
# reformat ecosystem names
levels(eco_type)
IUCN_ecosystem_types <- read_excel("data/IUCN_ecosystem_types.xlsx")
IUCN_ecosystem_types$ecosystem_type
# import tiff file and create raster
eco_type <- rast("data/ecosystem_type.tiff")
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
# reformat ecosystem names
levels(eco_type)
z = levels(eco_type)[[1]]
z
strsplit(z, split = "(?<=[[:upper:]])(?=[[:upper:]][[:lower:]])",
perl = TRUE)[[1]]
strsplit(z$Label, split = "(?<=[[:upper:]])(?=[[:upper:]][[:lower:]])",
perl = TRUE)[[1]]
sapply(z$Label, function(x) trimws(gsub("([A-Z])", " \\1", x)))
levels(eco_type)
z = levels(eco_type)[[1]]
z = sapply(z$Label, function(x) trimws(gsub("([A-Z])", " \\1", x)))
z
library(stringr)
levels(eco_type)
z = levels(eco_type)[[1]]
trimws(str_replace_all(z$Label, "([A-Z])", " \\1"))
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
# import tiff file and create raster
eco_type <- rast("data/ecosystem_type.tiff")
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
# reformat ecosystem names
levels(eco_type)
# z = levels(eco_type)[[1]]
levels(eco_type) = trimws(str_replace_all(eco_type$Label, "([A-Z])", " \\1"))
# z = levels(eco_type)[[1]]
levels(eco_type$Label) = trimws(str_replace_all(eco_type$Label, "([A-Z])", " \\1"))
# reformat ecosystem names
levels(eco_type)
z = levels(eco_type)[[1]]
z
z$Label = trimws(str_replace_all(z$Label, "([A-Z])", " \\1"))
z
levels(eco_type) <- z
levels(eco_type)
# set working directory
setwd("C:/Users/abergelm/Desktop/R/ecosystem_services")
# import tiff file and create raster
eco_type <- rast("data/ecosystem_type.tiff")
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
# reformat ecosystem names
levels(eco_type)
z = levels(eco_type)[[1]]
z$Label = trimws(str_replace_all(z$Label, "([A-Z])", " \\1"))
# replot raster with new legend names
levels(eco_type) <- z
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
levels(eco_type)
# import ecosystem type data table
eco_type_area <- read_excel("data/ARIES_tables.xlsx",
sheet = "Ecosystem extent account - addi",
skip = 2)
View(eco_type_area)
eco_type_area %>% slice(5)
View(eco_type_area)
eco_type_area <- slice(eco_type_area, 5)
View(eco_type_area)
eco_type_area <- eco_type_area[,-1]
View(eco_type_area)
eco_type_area
View(eco_type_area)
library(tidyr)
eco_type_area <- read_excel("data/ARIES_tables.xlsx",
sheet = "Ecosystem extent account - addi",
skip = 2)
eco_type_area <- slice(eco_type_area, 5)
eco_type_area <- eco_type_area %>%pivot_longer(!...1, names_to = "area", values_to = "count")
View(eco_type_area)
eco_type_area <- read_excel("data/ARIES_tables.xlsx",
sheet = "Ecosystem extent account - addi",
skip = 2)
eco_type_area <- slice(eco_type_area, 5)
eco_type_area <- eco_type_area %>%pivot_longer(!...1, names_to = "ecosystem_type", values_to = "area")
# import ecosystem type tiff file and create raster
eco_type <- rast("data/ecosystem_type.tiff")
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
# reformat ecosystem names
levels(eco_type)
z = levels(eco_type)[[1]]
z$Label = trimws(str_replace_all(z$Label, "([A-Z])", " \\1"))
# re-plot raster with new legend names
levels(eco_type) <- z
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
# import ecosystem type data table
# table contains km2 of each ecosystem type
eco_type_area <- read_excel("data/ARIES_tables.xlsx",
sheet = "Ecosystem extent account - addi",
skip = 2)
eco_type_area <- slice(eco_type_area, 5)
View(eco_type_area)
# set working directory
setwd("C:/Users/abergelm/Desktop/R/ecosystem_services/data\mapdata/1-1-18,_12-00_am_to_1-1-19,_12-00_am")
# set working directory
setwd("C:/Users/abergelm/Desktop/R/ecosystem_services/data/mapdata/1-1-18,_12-00_am_to_1-1-19,_12-00_am")
eco_type <- rast("ecosystem_type.dir/ecosystem_type.tiff")
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
# reformat ecosystem names
levels(eco_type)
z = levels(eco_type)[[1]]
z$Label = trimws(str_replace_all(z$Label, "([A-Z])", " \\1"))
# re-plot raster with new legend names
levels(eco_type) <- z
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
plot(eco_type,
main="Area of IUCN’s Global Ecosystem Typology Ecosystem Type in Canada 2019",
axes=FALSE)
# import ecosystem type tiff file and create raster
eco_type <- rast("ecosystem_type.dir/ecosystem_type.tiff")
plot(eco_type,
main="Area of IUCN’s Global Ecosystem Typology Ecosystem Type in Canada 2019",
axes=FALSE)
plot(eco_type,
main="Ecosystem Types in Canada 2019",
axes=FALSE)
land_cover <- rast("land_cover_type.tiff/land_cover_type.tiff")
plot(land_cover,
main="Land Cover in Canada",
axes=FALSE)
# import land cover type tiff file and create raster
land_cover <- rast("land_cover_type.dir/land_cover_type.tiff")
plot(land_cover,
main="Land Cover in Canada",
axes=FALSE)
plot(eco_type,
main="Ecosystem Types in Canada 2019",
axes=FALSE)
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
# import ecosystem type tiff file and create raster
eco_type <- rast("ecosystem_type.dir/ecosystem_type.tiff")
plot(eco_type,
main="Ecosystem Types in Canada 2019",
axes=FALSE)
# reformat ecosystem names
levels(eco_type)
z = levels(eco_type)[[1]]
z$Label = trimws(str_replace_all(z$Label, "([A-Z])", " \\1"))
# re-plot raster with new legend names
levels(eco_type) <- z
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
levels(eco_type) <- z
eco_type_plot <- plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
eco_type_plot
eco_type_plot
eco_type_plot <- plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
# import ecosystem type tiff file and create raster
eco_type <- rast("ecosystem_type.dir/ecosystem_type.tiff")
plot(eco_type,
main="Ecosystem Types in Canada 2019",
axes=FALSE)
# reformat ecosystem names
levels(eco_type)
z = levels(eco_type)[[1]]
z$Label = trimws(str_replace_all(z$Label, "([A-Z])", " \\1"))
# re-plot raster with new legend names
levels(eco_type) <- z
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
land_cover <- rast("land_cover_type.dir/land_cover_type.tiff")
plot(land_cover,
main="Land Cover in Canada",
axes=FALSE)
# import land cover type tiff file and create raster
land_cover <- rast("land_cover_type.dir/land_cover_type.tiff")
plot(land_cover,
main="Land Cover in Canada",
axes=FALSE)
# import land cover type tiff file and create raster
land_cover <- rast("land_cover_type.dir/land_cover_type.tiff")
plot(land_cover,
main="Land Cover in Canada",
axes=FALSE)
# reformat legend
levels(land_cover)
z = levels(land_cover)[[1]]
z$Label = trimws(str_replace_all(z$Label, "([A-Z])", " \\1"))
# re-plot raster with new legend names
levels(land_cover) <- z
plot(land_cover,
main="Ecosystem Extent in Canada",
axes=FALSE)
# set working directory
setwd("C:/Users/abergelm/Desktop/R/ecosystem_services/data/mapdata")
# import ecosystem type tiff file and create raster
eco_type <- rast("ecosystem_type.dir/ecosystem_type.tiff")
plot(eco_type,
main="Ecosystem Types in Canada 2019",
axes=FALSE)
# reformat legend
levels(eco_type)
z = levels(eco_type)[[1]]
z$Label = trimws(str_replace_all(z$Label, "([A-Z])", " \\1"))
# re-plot raster with new legend names
levels(eco_type) <- z
plot(eco_type,
main="Ecosystem Extent in Canada",
axes=FALSE)
# import land cover type tiff file and create raster
land_cover <- rast("land_cover_type.dir/land_cover_type.tiff")
plot(land_cover,
main="Land Cover in Canada",
axes=FALSE)
# reformat legend
levels(land_cover)
z = levels(land_cover)[[1]]
z$Label = trimws(str_replace_all(z$Label, "([A-Z])", " \\1"))
# re-plot raster with new legend names
levels(land_cover) <- z
plot(land_cover,
main="Ecosystem Extent in Canada",
axes=FALSE)
# import demand for outdoor recreation tiff file and create raster
outdoor_rec <- rast("outdoor_rec/demand_outdoor_rec.tiff")
plot(outdoor_rec,
main="Demanded Value for Outdoor Recreation ",
axes=FALSE)
